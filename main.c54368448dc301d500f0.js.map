{"version":3,"sources":["webpack:///./js/fetch-countries.js","webpack:///./js/refs.js","webpack:///./index.js"],"names":["countryName","fetch","then","resp","json","catch","console","log","refs","input","document","querySelector","countriesList","btnRef","addEventListener","debounce","e","getCountries","target","value","data","length","markup","map","name","join","innerHTML","insertAdjacentHTML","languages","flag","capital","population","error","text","delay"],"mappings":"4iBAAe,WAA4BA,GAA5B,yGACJC,MAAM,yCAAyCD,GACjDE,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBC,OAAM,kBAAMC,QAAQC,IAAI,aAHlB,4C,iFCKAC,EALF,CACTC,MAAOC,SAASC,cAAc,UAC9BC,cAAeF,SAASC,cAAc,kBACtCE,OAAQH,SAASC,cAAc,SCiDnCH,EAAKC,MAAMK,iBAAiB,QAASC,KA1CrC,SAAsBC,IFVP,SAAf,mCEYIC,CADcD,EAAEE,OAAOC,OAElBjB,MAAK,SAAAkB,GACF,GAAIA,EAAKC,OAAS,GAAKD,EAAKC,QAAU,GAAI,CACtC,IAAMC,EAASF,EAAKG,KAAI,2BAAGC,KAAH,WAAkCC,KAAK,IAC/DjB,EAAKI,cAAcc,UAAY,GAC/BlB,EAAKI,cAAce,mBAAmB,YAAaL,QAElD,GAAoB,IAAhBF,EAAKC,OAAc,CACxBf,QAAQC,IAAIa,GACZ,IAAMQ,EAAYR,EAAK,GAAGQ,UAAUL,KAAI,2BAAGC,KAAH,WAAkCC,KAAK,IACzEH,EAASF,EAAKG,KAAI,YACpB,2DAD4D,EAArCC,KACvB,yDAD4D,EAA/BK,KAC7B,yDAD4D,EAAzBC,QACnC,4CAD4D,EAAhBC,WAC5C,wEAMMH,EANN,sCAQDH,KAAK,IACRjB,EAAKI,cAAcc,UAAY,GAC/BlB,EAAKI,cAAce,mBAAmB,YAAaL,QAG9CF,EAAKC,OAAS,IACnBb,EAAKI,cAAcc,UAAY,GAC/BM,gBAAM,CACFC,KAAM,8DACVC,MAAO,OAIPF,gBAAM,CACNC,KAAM,0BACNC,MAAO,WAMqC,Q","file":"main.c54368448dc301d500f0.js","sourcesContent":["export default async function getCountries(countryName) {\r\n    return fetch(`https://restcountries.eu/rest/v2/name/${countryName}`)\r\n        .then(resp => resp.json())\r\n        .catch(() => console.log('error'))\r\n}\r\n","const refs = {\r\n    input: document.querySelector('.input'),\r\n    countriesList: document.querySelector('.countriesList'),\r\n    btnRef: document.querySelector('.btn')\r\n}\r\nexport default refs","\r\nimport './styles.css';\r\nimport getCountries from './js/fetch-countries'\r\nimport  { error } from '@pnotify/core';\r\nimport '@pnotify/core/dist/PNotify.css';\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\nimport debounce from 'lodash.debounce';\r\nimport refs from './js/refs'\r\n\r\n\r\nfunction createMarkup(e) {\r\n    const query = e.target.value\r\n    getCountries(query)\r\n        .then(data => {\r\n            if (data.length > 1 && data.length <= 10) {\r\n                const markup = data.map(({ name }) => `<li>${name}</li>`).join('')\r\n                refs.countriesList.innerHTML = ''\r\n                refs.countriesList.insertAdjacentHTML('beforeend', markup)\r\n            }\r\n            else if (data.length === 1) {\r\n                console.log(data);\r\n                const languages = data[0].languages.map(({ name }) => `<li>${name}</li>`).join('')\r\n                const markup = data.map(({ name, flag, capital, population}) => {\r\n                    return `<li class=\"countryList\">\r\n                    <h1>${name}</h1>\r\n                    <div class=\"img\"><img src=\"${flag}\" width=\"280\"></div>\r\n                    <p>Capital: ${capital}</p>\r\n                    <p>Population: ${population}</p>\r\n                    <p>Languages:</p>\r\n                    <ul>${languages}</ul>\r\n                    </li>`\r\n                }).join('')\r\n                refs.countriesList.innerHTML = ''\r\n                refs.countriesList.insertAdjacentHTML('beforeend', markup)\r\n                \r\n            }\r\n            else if (data.length > 10) {\r\n                refs.countriesList.innerHTML = ''\r\n                error({\r\n                    text: \"Too many matches found. Please enter a more specific query!\",\r\n                delay: 2000,\r\n                })\r\n            }\r\n            else {\r\n                error({\r\n                text: \"Too many matches found!\",\r\n                delay: 2000,\r\n                })\r\n            }\r\n        })\r\n}\r\n\r\nrefs.input.addEventListener('input', debounce(createMarkup, 500))\r\n"],"sourceRoot":""}